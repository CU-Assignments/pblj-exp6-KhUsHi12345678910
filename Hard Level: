import java.util.*;
import java.util.stream.Collectors;

class Product {
    String name;
    String category;
    double price;

    public Product(String name, String category, double price) {
    this.name = name;
    this.category = category;
    this.price = price;
    }

  
    @Override
    public String toString() {
    return name + " ($" + price + ")";
    }
}

public class ProductProcessor {
    public static void main(String[] args) {
  
    List<Product> products = Arrays.asList(
    new Product("Laptop", "Electronics", 800),
    new Product("Smartphone", "Electronics", 600),
    new Product("TV", "Electronics", 1000),
    new Product("Shirt", "Clothing", 40),
    new Product("Jeans", "Clothing", 50),
    new Product("Jacket", "Clothing", 120),
    new Product("Apple", "Grocery", 2),
    new Product("Milk", "Grocery", 3),
    new Product("Bread", "Grocery", 4)
    );

    
    Map<String, List<Product>> productsByCategory = products.stream()
    .collect(Collectors.groupingBy(product -> product.category));

 
    Map<String, Optional<Product>> mostExpensiveByCategory = products.stream()
    .collect(Collectors.groupingBy(
    product -> product.category,
    Collectors.maxBy(Comparator.comparingDouble(product -> product.price))
    ));
    
    double averagePrice = products.stream()
    .collect(Collectors.averagingDouble(product -> product.price));


    System.out.println("Products Grouped by Category:");
    productsByCategory.forEach((category, productList) -> 
    System.out.println(category + ": " + productList));

    System.out.println("\nMost Expensive Product in Each Category:");
    mostExpensiveByCategory.forEach((category, product) -> 
    System.out.println(category + ": " + product.orElse(null)));

    System.out.println("\nAverage Price of All Products: $" + averagePrice);
    }
}
